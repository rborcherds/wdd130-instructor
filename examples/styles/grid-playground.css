/*********************************************************************
Only modify the grid-column and grid-row of each placement rules in this file.

This uses grid-column and grid-row for placement. Once you learn these 
then you can try your hand at grid-area configurations by using the 
grid-playground-area.css file to learn grid-area.

You can change any fo the 4 properties in these first 7 rules.
grid-column: 1/3; can also be written as grid-column: 1 / span 2;
Use whichever format you feel most comfortable with at first then then 
learn the other format. You will encounter all formats as a web developer.
*********************************************************************/

.placement1 {
    grid-column: 1/4;
    grid-row: 2;
    background-color: #f97d8f;
    padding: .5rem;
    z-index: 1
}

.placement2 {
    grid-column: 1 / span 3;
    grid-row: 3 / span 1;
    background-color: #b5f97d;
    padding: .5rem;
}

.placement3 {
    grid-column: 1 / 4;
    grid-row: 4 / 5;
    background-color: #ecf97d;
    padding: .5rem;
}

.placement4 {
    grid-column: 1/4;
    grid-row: 5/6;
    background-color: #f488f8;
    padding: .5rem;
}

.placement5 {
    grid-column: 1/4;
    grid-row: 6/7;
    background-color: #f1072a;
    padding: .5rem;
}

.placement6 {
    grid-column: 1/4;
    grid-row: 7/8;
    background-color: #050357;
    color: #fff;
    padding: .5rem;
}

.placement7 {
    grid-column: 1/4;
    grid-row: 8;
    background-color: #19a2f1;
    padding: .5rem;
}


/********************************************************************
*
*       DO NOT MODIFY BELOW THIS LINE UNTIL YOU HAVE MASTERED
        grid-template-column and grid-template-row placement

*       This is what defines the grid display and sets the background
*       body color.
*
*       There is a grid gap of 10px between the rows
*       and 16px between the columns. That is the last line
*       of the main rule below.
*
*       The width and height of the grid is defined with the
*       width and height properties in the main rule below.
*
********************************************************************/

body {
    background-color: #9fd7f8;
    margin: 2em 0 0 0;
    padding: 0;
    font-size: 18px;
}

header,
main {
    max-width: 1350px;
    margin: 0 auto;
}

header {
    width: 1000px;
    margin: 0 auto;
    display: flex;
    align-items: center;
}

header a {
    margin: 2em;
    padding: 1em;
    background-color: rgb(3, 3, 73);
    color: #fff;
    border: 1px solid #fff;
    border-radius: 1rem;
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 1px;
}

header a:hover {
    background-color: #fff;
    color: rgb(3, 3, 73);
    box-shadow: 0 0 5px 2px rgb(3, 3, 73);
}

/* This is the main rule that defines the grid. You may not understand the grid setup
at this time but you will learn it as you learn grid.
Read this to learn about minmax: https://developer.mozilla.org/en-US/docs/Web/CSS/minmax 
Read this to learn about the repeat: https://developer.mozilla.org/en-US/docs/Web/CSS/repeat 
Read this to learn about the gap property: https://developer.mozilla.org/en-US/docs/Web/CSS/gap

*/
main {
    width: 1200px;
    height: 1200px;
    margin: 0 auto 10em auto;
    display: grid;
    grid-template-columns: repeat(12, minmax(10px, 1fr));
    grid-template-rows: repeat(12, minmax(10px, 1fr));
    /* You can rem out the width and height and use these definitions once you understand 
    how to define the grid using. This is a 12 x 12 grid were the grid size is set in the 
    grid-template properties and not using a width/height setting.
     */
    /* grid-template-columns: repeat(12, 100px);
    grid-template-rows: repeat(12, 100px); */
    gap: 10px;
}

/*****************************************************************************
    The first rule below puts the border around each grid square.
    The rest of the rules are to show you the grid placement for each div
    in the HTML code. There are 144 of these grid placements for a 12 x 12
    grid layout.
*****************************************************************************/
.border {
    border: 1px solid #535252;
    background-color: #fff8dc;
}

/*****************************************************************************
The format of the numbering in the rule name is row-column for each grid 
placement. This was done on purpose so that you do not confuse it with the 
grid-column, grid-row numbering.

If you modify any of these you will mess with the 12 x 12 grid setup.
*****************************************************************************/
.sq1-1 {
    grid-column: 1;
    grid-row: 1;
}

.sq1-2 {
    grid-column: 2;
    grid-row: 1;
}

.sq1-3 {
    grid-column: 3;
    grid-row: 1;
}

.sq1-4 {
    grid-column: 4;
    grid-row: 1;
}

.sq1-5 {
    grid-column: 5;
    grid-row: 1;
}

.sq1-6 {
    grid-column: 6;
    grid-row: 1;
}

.sq1-7 {
    grid-column: 7;
    grid-row: 1;
}

.sq1-8 {
    grid-column: 8;
    grid-row: 1;
}

.sq1-9 {
    grid-column: 9;
    grid-row: 1;
}

.sq1-10 {
    grid-column: 10;
    grid-row: 1;
}

.sq1-11 {
    grid-column: 11;
    grid-row: 1;
}

.sq1-12 {
    grid-column: 12;
    grid-row: 1;
}

.sq2-1 {
    grid-column: 1;
    grid-row: 2;
}

.sq2-2 {
    grid-column: 2;
    grid-row: 2;
}

.sq2-3 {
    grid-column: 3;
    grid-row: 2;
}

.sq2-4 {
    grid-column: 4;
    grid-row: 2;
}

.sq2-5 {
    grid-column: 5;
    grid-row: 2;
}

.sq2-6 {
    grid-column: 6;
    grid-row: 2;
}

.sq2-7 {
    grid-column: 7;
    grid-row: 2;
}

.sq2-8 {
    grid-column: 8;
    grid-row: 2;
}

.sq2-9 {
    grid-column: 9;
    grid-row: 2;
}

.sq2-10 {
    grid-column: 10;
    grid-row: 2;
}

.sq2-11 {
    grid-column: 11;
    grid-row: 2;
}

.sq2-12 {
    grid-column: 12;
    grid-row: 2;
}

.sq3-1 {
    grid-column: 1;
    grid-row: 3;
}

.sq3-2 {
    grid-column: 2;
    grid-row: 3;
}

.sq3-3 {
    grid-column: 3;
    grid-row: 3;
}

.sq3-4 {
    grid-column: 4;
    grid-row: 3;
}

.sq3-5 {
    grid-column: 5;
    grid-row: 3;
}

.sq3-6 {
    grid-column: 6;
    grid-row: 3;
}

.sq3-7 {
    grid-column: 7;
    grid-row: 3;
}

.sq3-8 {
    grid-column: 8;
    grid-row: 3;
}

.sq3-9 {
    grid-column: 9;
    grid-row: 3;
}

.sq3-10 {
    grid-column: 10;
    grid-row: 3;
}

.sq3-11 {
    grid-column: 11;
    grid-row: 3;
}

.sq3-12 {
    grid-column: 12;
    grid-row: 3;
}

.sq4-1 {
    grid-column: 1;
    grid-row: 4;
}

.sq4-2 {
    grid-column: 2;
    grid-row: 4;
}

.sq4-3 {
    grid-column: 3;
    grid-row: 4;
}

.sq4-4 {
    grid-column: 4;
    grid-row: 4;
}

.sq4-5 {
    grid-column: 5;
    grid-row: 4;
}

.sq4-6 {
    grid-column: 6;
    grid-row: 4;
}

.sq4-7 {
    grid-column: 7;
    grid-row: 4;
}

.sq4-8 {
    grid-column: 8;
    grid-row: 4;
}

.sq4-9 {
    grid-column: 9;
    grid-row: 4;
}

.sq4-10 {
    grid-column: 10;
    grid-row: 4;
}

.sq4-11 {
    grid-column: 11;
    grid-row: 4;
}

.sq4-12 {
    grid-column: 12;
    grid-row: 4;
}

.sq5-1 {
    grid-column: 1;
    grid-row: 5;
}

.sq5-2 {
    grid-column: 2;
    grid-row: 5;
}

.sq5-3 {
    grid-column: 3;
    grid-row: 5;
}

.sq5-4 {
    grid-column: 4;
    grid-row: 5;
}

.sq5-5 {
    grid-column: 5;
    grid-row: 5;
}

.sq5-6 {
    grid-column: 6;
    grid-row: 5;
}

.sq5-7 {
    grid-column: 7;
    grid-row: 5;
}

.sq5-8 {
    grid-column: 8;
    grid-row: 5;
}

.sq5-9 {
    grid-column: 9;
    grid-row: 5;
}

.sq5-10 {
    grid-column: 10;
    grid-row: 5;
}

.sq5-11 {
    grid-column: 11;
    grid-row: 5;
}

.sq5-12 {
    grid-column: 12;
    grid-row: 5;
}

.sq6-1 {
    grid-column: 1;
    grid-row: 6;
}

.sq6-2 {
    grid-column: 2;
    grid-row: 6;
}

.sq6-3 {
    grid-column: 3;
    grid-row: 6;
}

.sq6-4 {
    grid-column: 4;
    grid-row: 6;
}

.sq6-5 {
    grid-column: 5;
    grid-row: 6;
}

.sq6-6 {
    grid-column: 6;
    grid-row: 6;
}

.sq6-7 {
    grid-column: 7;
    grid-row: 6;
}

.sq6-8 {
    grid-column: 8;
    grid-row: 6;
}

.sq6-9 {
    grid-column: 9;
    grid-row: 6;
}

.sq6-10 {
    grid-column: 10;
    grid-row: 6;
}

.sq6-11 {
    grid-column: 11;
    grid-row: 6;
}

.sq6-12 {
    grid-column: 12;
    grid-row: 6;
}

.sq7-1 {
    grid-column: 1;
    grid-row: 7;
}

.sq7-2 {
    grid-column: 2;
    grid-row: 7;
}

.sq7-3 {
    grid-column: 3;
    grid-row: 7;
}

.sq7-4 {
    grid-column: 4;
    grid-row: 7;
}

.sq7-5 {
    grid-column: 5;
    grid-row: 7;
}

.sq7-6 {
    grid-column: 6;
    grid-row: 7;
}

.sq7-7 {
    grid-column: 7;
    grid-row: 7;
}

.sq7-8 {
    grid-column: 8;
    grid-row: 7;
}

.sq7-9 {
    grid-column: 9;
    grid-row: 7;
}

.sq7-10 {
    grid-column: 10;
    grid-row: 7;
}

.sq7-11 {
    grid-column: 11;
    grid-row: 7;
}

.sq7-12 {
    grid-column: 12;
    grid-row: 7;
}


.sq8-1 {
    grid-column: 1;
    grid-row: 8;
}

.sq8-2 {
    grid-column: 2;
    grid-row: 8;
}

.sq8-3 {
    grid-column: 3;
    grid-row: 8;
}

.sq8-4 {
    grid-column: 4;
    grid-row: 8;
}

.sq8-5 {
    grid-column: 5;
    grid-row: 8;
}

.sq8-6 {
    grid-column: 6;
    grid-row: 8;
}

.sq8-7 {
    grid-column: 7;
    grid-row: 8;
}

.sq8-8 {
    grid-column: 8;
    grid-row: 8;
}

.sq8-9 {
    grid-column: 9;
    grid-row: 8;
}

.sq8-10 {
    grid-column: 10;
    grid-row: 8;
}

.sq8-11 {
    grid-column: 11;
    grid-row: 8;
}

.sq8-12 {
    grid-column: 12;
    grid-row: 8;
}

.sq9-1 {
    grid-column: 1;
    grid-row: 9;
}

.sq9-2 {
    grid-column: 2;
    grid-row: 9;
}

.sq9-3 {
    grid-column: 3;
    grid-row: 9;
}

.sq9-4 {
    grid-column: 4;
    grid-row: 9;
}

.sq9-5 {
    grid-column: 5;
    grid-row: 9;
}

.sq9-6 {
    grid-column: 6;
    grid-row: 9;
}

.sq9-7 {
    grid-column: 7;
    grid-row: 9;
}

.sq9-8 {
    grid-column: 8;
    grid-row: 9;
}

.sq9-9 {
    grid-column: 9;
    grid-row: 9;
}

.sq9-10 {
    grid-column: 10;
    grid-row: 9;
}

.sq9-11 {
    grid-column: 11;
    grid-row: 9;
}

.sq9-12 {
    grid-column: 12;
    grid-row: 9;
}


.sq10-1 {
    grid-column: 1;
    grid-row: 10;
}

.sq10-2 {
    grid-column: 2;
    grid-row: 10;
}

.sq10-3 {
    grid-column: 3;
    grid-row: 10;
}

.sq10-4 {
    grid-column: 4;
    grid-row: 10;
}

.sq10-5 {
    grid-column: 5;
    grid-row: 10;
}

.sq10-6 {
    grid-column: 6;
    grid-row: 10;
}

.sq10-7 {
    grid-column: 7;
    grid-row: 10;
}

.sq10-8 {
    grid-column: 8;
    grid-row: 10;
}

.sq10-9 {
    grid-column: 9;
    grid-row: 10;
}

.sq10-10 {
    grid-column: 10;
    grid-row: 10;
}

.sq10-11 {
    grid-column: 11;
    grid-row: 10;
}

.sq10-12 {
    grid-column: 12;
    grid-row: 10;
}

.sq11-1 {
    grid-column: 1;
    grid-row: 11;
}

.sq11-2 {
    grid-column: 2;
    grid-row: 11;
}

.sq11-3 {
    grid-column: 3;
    grid-row: 11;
}

.sq11-4 {
    grid-column: 4;
    grid-row: 11;
}

.sq11-5 {
    grid-column: 5;
    grid-row: 11;
}

.sq11-6 {
    grid-column: 6;
    grid-row: 11;
}

.sq11-7 {
    grid-column: 7;
    grid-row: 11;
}

.sq11-8 {
    grid-column: 8;
    grid-row: 11;
}

.sq11-9 {
    grid-column: 9;
    grid-row: 11;
}

.sq11-10 {
    grid-column: 10;
    grid-row: 11;
}

.sq11-11 {
    grid-column: 11;
    grid-row: 11;
}

.sq11-12 {
    grid-column: 12;
    grid-row: 11;
}

.sq12-1 {
    grid-column: 1;
    grid-row: 12;
}

.sq12-2 {
    grid-column: 2;
    grid-row: 12;
}

.sq12-3 {
    grid-column: 3;
    grid-row: 12;
}

.sq12-4 {
    grid-column: 4;
    grid-row: 12;
}

.sq12-5 {
    grid-column: 5;
    grid-row: 12;
}

.sq12-6 {
    grid-column: 6;
    grid-row: 12;
}

.sq12-7 {
    grid-column: 7;
    grid-row: 12;
}

.sq12-8 {
    grid-column: 8;
    grid-row: 12;
}

.sq12-9 {
    grid-column: 9;
    grid-row: 12;
}

.sq12-10 {
    grid-column: 10;
    grid-row: 12;
}

.sq12-11 {
    grid-column: 11;
    grid-row: 12;
}

.sq12-12 {
    grid-column: 12;
    grid-row: 12;
}